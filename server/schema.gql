# Schemas require a top level type named `Query`
type Query {
  # An array of Jobs
  jobs: [Job]
  # Adding arguments to a query
  job(id: ID!): Job
  company(id: ID!): Company
}

# A Mutation is a root type like Query
type Mutation {
  # Mutations have arguments and also require return types
  createJob(input: CreateJobInput): Job
}

# Output Types
type Job {
  # IDs is a built-in type, similar to a string
  # ! - Required field
  id: ID!
  title: String
  # Associates `company` field with `Company` type
  company: Company
  description: String
}

type Company {
  id: ID!
  name: String
  description: String
  jobs: [Job]
}

# Input Types - used to simplify arguments
input CreateJobInput {
  companyId: ID
  title: String
  description: String
}
